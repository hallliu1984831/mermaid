大家好，今天来聊Kubernetes Pod的最后一个话题：Pod 常见退出码（Exit Code）
在 Kubernetes 的世界里，Pod 是干活儿的工人，而退出码 (Exit Code) 就像是工人辞职的理由。这些理由多种多样，请参考图2

Exit Code 是啥？
简单来说，Exit Code 是容器（Container）在退出时留下的一份“辞职报告”，用一个数字说明它为啥退出。Kubernetes 会根据这个数字判断 Pod 的状态，然后决定是给你发 offer 再招一次，还是彻底解雇。

0：Pod 完成任务，光荣退休（Completed）。
大于 0：Pod 有问题，可能是异常退出，也可能是被老板（Kubernetes）炒了，比如 Error 或 OOMKilled。

Exit Code 0：Completed 状态，任务完成，优雅退出。
如果你很好的完成了老板分配的任务，写了一份漂亮的代码，结果完美，代码运行结束并优雅退出。Exit Code 0 就是这种状态：任务完成，无需重启，Pod “功成身退”。

Exit Code 1：Error 状态，程序出错，异常退出。请参考我发的上一个视频
如果你写了个脚本，但里面有个隐藏的 Bug，结果运行时直接炸了，控制台蹦出一堆红字，程序异常结束。Exit Code 1 就是这个意思：Pod 在任务中途挂掉了，没完成工作。

常见原因：

脚本逻辑错误（比如除以 0）。
必要的文件、环境变量缺失。
依赖库崩溃。

Exit Code 137： OOMKilled 状态，内存不足，被系统干掉了。 OOM是Out Of Memory的缩写
试想你在电脑上开了 100 个 Chrome 标签页，结果电脑卡成 PPT，最后系统直接关掉你的浏览器。这就是 OOMKilled 的真实写照：Pod 吃光了分配的内存，结果被 Kubernetes 的“看门大爷”——OOMKiller 强行干掉。

解决方法：

增加 Pod 的内存限制（resources.limits.memory）。
优化代码，减少内存消耗。
分批处理数据，别一口气吃成胖子。

在 K8S 的世界里，Pod 的退出码就像是一封封“辞职信”，记录着这些工人为什么离开。Completed 是工人最光荣的结局，Error 则是工作中途翻车，而 OOMKilled 则是因为环境不给力被迫离场。


作为 K8S 的保姆，SRE需要学会看懂这些“辞职信”，优化工作环境，让你的 Pod 干活更高效。愿每个 Pod 都能少点 Bug，多点内存，顺顺利利交差！